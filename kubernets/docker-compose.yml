version: '3.9'

services:
  etcd:
    image: quay.io/coreos/etcd
    container_name: etcd
    networks:
      kube:
    command: etcd -name etcd0 -initial-cluster-token etcd-cluster-1 --listen-client-urls 'http://0.0.0.0:2379' --advertise-client-urls 'http://172.16.9.2:2379' --data-dir /var/lib/etcd
    volumes:
      - kube-etcd:/var/lib/etcd

  master:
    image: urykhy/kube-master
    build: ./master
    container_name: kube-master
    privileged: true
    networks:
      kube:
    depends_on:
      - etcd
    healthcheck:
      test: kubectl get --raw='/readyz?'
      interval: 5s
      timeout: 5s
      retries: 10

  dns:
    image: coredns/coredns:latest
    container_name: kube-dns
    command: -conf /etc/coredns/Corefile
    networks:
      kube:
    depends_on:
      master:
        condition: service_healthy
    volumes:
      - ./Corefile:/etc/coredns/Corefile

  node1:
    image: urykhy/kube-node
    build: ./node
    container_name: kube-node1
    hostname: kube-node1
    networks:
      kube:
    privileged: true
    depends_on:
      - dns
    healthcheck:
      test: kubectl --kubeconfig=/kubeconfig get node kube-node1
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - kube-node1:/var/lib/docker
    environment:
      NODE_DNS: 103.103.10.3

  node2:
    image: urykhy/kube-node
    build: ./node
    container_name: kube-node2
    hostname: kube-node2
    networks:
      kube:
    privileged: true
    depends_on:
      node1:
        condition: service_healthy
    healthcheck:
      test: kubectl --kubeconfig=/kubeconfig get node kube-node2
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - kube-node2:/var/lib/docker
    environment:
      NODE_DNS: 103.103.10.3

networks:
  kube:
    external: true
volumes:
  kube-node1:
    external: true
  kube-node2:
    external: true
  kube-etcd:
    external: true

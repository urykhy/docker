# run once replication started
# ansible-playbook semisync.yaml -i inventory.ini
- hosts: docker
  connection: local
  gather_facts: yes
  tasks:
  - name: master semi
    community.docker.docker_container:
      name: "{{ master }}"
      hostname: "{{ master }}"
      image: "{{ image }}"
      command: ["--server-id=1",
                "--log-bin=mysql-bin",
                "--binlog-format=ROW",
                "--expire-logs-days=7",
                "--gtid-mode=ON",
                "--enforce-gtid-consistency",
                "--performance-schema-instrument=statement/%=ON",
                "--performance-schema-consumer-statements-digest=ON",
                "--innodb-monitor-enable=ALL",
                "--log_output=FILE",
                "--general_log_file=/var/lib/mysql/log",
                "--general_log=1",
                "--plugin-load-add=rpl_semi_sync_source=semisync_source.so",
                "--rpl_semi_sync_source_enabled=1"]
      mounts:
        - target: /var/lib/mysql
          source: "{{ master }}"
      env:
        MYSQL_ROOT_PASSWORD: root
      state: started

  - name: slave semi
    community.docker.docker_container:
      name: "{{ slave }}"
      hostname: "{{ slave }}"
      image: "{{ image }}"
      command: ["--server-id=2",
                "--log-bin=mysql-bin",
                "--binlog-format=ROW",
                "--expire-logs-days=7",
                "--gtid-mode=ON",
                "--enforce-gtid-consistency",
                "--log_replica_updates",
                "--read-only",
                "--plugin-load-add=rpl_semi_sync_replica=semisync_replica.so",
                "--rpl_semi_sync_replica_enabled=1"]
      mounts:
        - target: /var/lib/mysql
          source: "{{ slave }}"
      env:
        MYSQL_ROOT_PASSWORD: root
      state: started

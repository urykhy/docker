user nginx nginx;
worker_processes 1;
error_log stderr info;
load_module modules/ngx_http_js_module.so;

events {
    worker_connections  1024;
}

http {
    include mime.types;
    access_log /dev/stdout;
    resolver 127.0.0.1 ipv6=off;

    server {
        listen       80;
        server_name  elf.dark;
        autoindex    on;
        root /home/ury/www;
        location ~* \.php$ {
            proxy_pass http://uwsgi-php.web.docker;
        }
        location /status {
            stub_status;
        }
    }
    server {
        listen 80;
        server_name regex.elf.dark;
        root /home/ury/devel/regex101/;
    }
    server {
        listen 80;
        server_name jekyll.elf.dark;
        location / {
            proxy_pass http://jekyll.web.docker;
        }
    }
    server {
        listen 80;
        server_name cherry.elf.dark;
        location /fonts {
            root /home/ury/code/stuff/torrent/;
        }
        location /torrent {
            return 302 http://$host$uri/;
        }
        location /torrent/ {
            proxy_pass http://uwsgi-torrent.web.docker/;
            proxy_redirect http://uwsgi-torrent.web.docker http://cherry.elf.dark/torrent;
        }
        location /flibusta {
            return 302 http://$host$uri/;
        }
        location /flibusta/ {
            proxy_pass http://uwsgi-flibusta.web.docker/;
            proxy_redirect http://uwsgi-flibusta.web.docker http://cherry.elf.dark/flibusta;
        }
    }
    server {
        listen 443 ssl;
        server_name nextcloud.elf.dark;
        ssl_certificate /etc/ssl/elf/server-nextcloud.elf.dark.crt;
        ssl_certificate_key /etc/ssl/elf/server-nextcloud.elf.dark.key;
        rewrite ^/\.well-known/carddav https://$server_name/remote.php/dav/ redirect;
        rewrite ^/\.well-known/caldav https://$server_name/remote.php/dav/ redirect;
        location / {
            proxy_pass http://nextcloud.docker;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect https://nextcloud.docker https://nextcloud.elf.dark;
        }
    }
    # proxy_pass to multiple upstreams, resolved at runtime
    js_import nginx.js;
    js_set $k8s_upstream nginx.k8s_upstream;
    server {
        listen 80;
        server_name *.k8s;
        location / {
            proxy_pass $k8s_upstream;
            proxy_set_header Host $host;
        }
    }

    # pip cache
    # based on https://github.com/ossobv/pypi-nginx-cache/blob/master/nginx.conf
    #
    # use:
    # PIP_INDEX_URL=http://elf.dark:8080/simple PIP_TRUSTED_HOST=elf.dark pip ....
    #
    proxy_cache_path /cache/pip levels=1:2 keys_zone=pip:10m inactive=10y max_size=10G use_temp_path=off;
    server {
        listen 8080 default_server;
        server_name _;

        proxy_cache pip;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_http_version 1.1;

        proxy_redirect ~https?://pypi.org(/.*) $1;                  # new
        proxy_redirect ~https?://pypi.python.org(/.*) $1;           # old
        proxy_redirect ~https?://files.pythonhosted.org(/.*) $1;    # pkgs

        location /simple/ {
            sub_filter 'https://pypi.org' '';                   # new
            sub_filter 'https://pypi.python.org' '';            # old
            sub_filter 'https://files.pythonhosted.org' '';     # pkgs
            sub_filter_once off;    # replace all occurrences of above
            proxy_cache_valid 200 1h;
            proxy_cache_valid any 5m;
            proxy_ssl_name pypi.org;
            proxy_ssl_server_name on;
            proxy_set_header Host pypi.org;
            proxy_set_header Connection "";
            proxy_set_header Accept-Encoding "";
            set $backend "https://pypi.org";
            proxy_pass $backend;
        }
        location /packages/ {
            proxy_ssl_name files.pythonhosted.org;
            proxy_ssl_server_name on;
            proxy_set_header Host files.pythonhosted.org;
            set $backend "https://files.pythonhosted.org";
            proxy_pass $backend;
        }
    }

    # cache for debian packages (actually can be used for everything)
    #
    # use:
    # APT_PROXY: http://elf.dark:8081
    # RUN echo "Acquire::http::Proxy \"${APT_PROXY}\";" > /etc/apt/apt.conf.d/02proxy
    #
    proxy_cache_path /cache/apt levels=1:2 keys_zone=apt:10m inactive=10y max_size=10G use_temp_path=off;
    server {
        listen 8081 default_server;
        server_name _;

        proxy_cache apt;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_http_version 1.1;

        location / {
            proxy_pass http://$host$request_uri;
        }
    }
    # proxy to https upstreams
    server {
        listen 8082 default_server;
        server_name _;

        proxy_cache apt;
        proxy_cache_revalidate on;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;
        proxy_http_version 1.1;
        proxy_cache_valid 1d; # force caching if no cache-control headers

        location / {
            proxy_pass https://$host$request_uri;
        }
    }
}

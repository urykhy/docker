user nginx nginx;
worker_processes 1;
error_log stderr info;
load_module modules/ngx_http_js_module.so;

events {
    worker_connections  1024;
}

http {
    include mime.types;
    access_log /dev/stdout;
    server {
        listen       80;
        server_name  elf.dark;
        autoindex    on;
        root /home/ury/www;
        location ~* \.php$ {
            proxy_pass http://uwsgi-php.web.docker;
        }
        location /status {
            stub_status;
        }
    }
    server {
        listen 80;
        server_name regex.elf.dark;
        root /home/ury/devel/regex101/;
    }
    server {
        listen 80;
        server_name jekyll.elf.dark;
        location / {
            proxy_pass http://jekyll.web.docker;
        }
    }
    server {
        listen 80;
        server_name cherry.elf.dark;
        location /fonts {
            root /home/ury/code/stuff/torrent/;
        }
        location /torrent {
            return 302 http://$host$uri/;
        }
        location /torrent/ {
            proxy_pass http://uwsgi-torrent.web.docker/;
            proxy_redirect http://uwsgi-torrent.web.docker http://cherry.elf.dark/torrent;
        }
        location /flibusta {
            return 302 http://$host$uri/;
        }
        location /flibusta/ {
            proxy_pass http://uwsgi-flibusta.web.docker/;
            proxy_redirect http://uwsgi-flibusta.web.docker http://cherry.elf.dark/flibusta;
        }
    }
    server {
        listen 443 ssl;
        server_name nextcloud.elf.dark;
        ssl_certificate /etc/ssl/elf/server-nextcloud.elf.dark.crt;
        ssl_certificate_key /etc/ssl/elf/server-nextcloud.elf.dark.key;
        rewrite ^/\.well-known/carddav https://$server_name/remote.php/dav/ redirect;
        rewrite ^/\.well-known/caldav https://$server_name/remote.php/dav/ redirect;
        location / {
            proxy_pass http://nextcloud.docker;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect https://nextcloud.docker https://nextcloud.elf.dark;
        }
    }
    # proxy_pass to multiple upstreams, resolved at runtime
    js_import nginx.js;
    js_set $k8s_upstream nginx.k8s_upstream;
    server {
        listen 80;
        server_name *.k8s;
        location / {
            resolver 10.103.10.3;
            proxy_pass $k8s_upstream;
            proxy_set_header Host $host;
        }
    }
}
